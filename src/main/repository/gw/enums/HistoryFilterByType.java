package repository.gw.enums;

public enum HistoryFilterByType {
	All("All"),
	Account_Adjusted("Account Adjusted"),
	Account_Created("Account Created"),
	Account_Delinquent("Account Delinquent"),
	Account_Fund_Transfer("Account Fund Transfer"),
	Account_Good_Standing("Account Good Standing"),
	Account_Late_Fee("Account Late Fee"),
	Added_To_Group("Added To Group"),
	Agency_Bill_Cycle("Agency Bill Cycle"),
	Authorization("Authorization"),
	Balance_Due_Letter_Sent("Balance Due Letter Sent"),
	Billing_Instruction("Billing Instruction"),
	Cancellation_Letter_Sent("Cancellation Letter Sent"),
	Carry_Over_Charge_Created("Carry Over Charge Created"),
	Change_in_Payment_Restriction_status("Change in Payment Restriction status"),
	Charge_Hold_Applied("Charge Hold Applied"),
	Charge_Hold_Edited("Charge Hold Edited"),
	Charge_Hold_Released("Charge Hold Released"),
	Charge_Modified("Charge Modified"),
	Charges("Charges"),
	Commission("Commission"),
	Commission_Payment("Commission Payment"),
	Contact_Changed("Contact Changed"),
	Credit("Credit"),
	Custom_Charge_Created("Custom Charge Created"),
	Disbursement_Made("Disbursement Made"),
	Document_Type_Deleted ("Document Type Deleted "),
	Document_Updated("Document Updated"),
	Due_Date("Due Date"),
	EFT_Payment_Request("EFT Payment Request"),
	Invoice_created_for_held_invoice_items("Invoice created for held invoice items"),
	Invoice_Item_Modified("Invoice Item Modified"),
	Invoice_Stream_Changed_for_Policy("Invoice Stream Changed for Policy"),
	Invoices("Invoices"),
	Manual_payment_Pending_Distribution("Manual payment Pending Distribution"),
	Manually_Exit_Delinquency("Manually Exit Delinquency"),
	Membership_Dues("Membership Dues"),
	Negative_Write_Off_at_Account_Level("Negative Write Off at Account Level"),
	Negative_Write_Off_at_Account_Level_Reversed("Negative Write Off at Account Level Reversed"),
	Notes_Updated("Notes Updated"),
	Payment_Made("Payment Made"),
	Payment_Modified("Payment Modified"),
	Payment_Moved("Payment Moved"),
	Payment_Plan_Changed_for_Policy_Period("Payment Plan Changed for Policy Period"),
	Payment_Plan_Method("Payment Plan/Method"),
	Payment_Reversed("Payment Reversed"),
	Plan_Created("Plan Created"),
	Policy_Added("Policy Added"),
	Policy_Canceled("Policy Canceled"),
	Policy_Changed("Policy Changed"),
	Policy_Closed("Policy Closed"),
	Policy_Delinquent("Policy Delinquent"),
	Policy_Expired("Policy Expired"),
	Policy_Funds_Transferred_To_Producer_Unapplied("Policy Funds Transferred To Producer Unapplied"),
	Policy_Good_Standing("Policy Good Standing"),
	Policy_Reinstated("Policy Reinstated"),
	Policy_Renewed("Policy Renewed"),
	Policy_Reopened("Policy Reopened"),
	Policy_Summary("Policy Summary"),
	Policy_Transferred("Policy Transferred"),
	Producer_Agency_Credit_Distribution_For_Credit_Statement("Producer Agency Credit Distribution For Credit Statement"),
	Producer_Changed("Producer Changed"),
	Producer_Fund_Transfer("Producer Fund Transfer"),
	Producer_Payment_Applied_to_Promise("Producer Payment Applied to Promise"),
	Producer_Promise("Producer Promise"),
	Producer_Updated("Producer Updated"),
	Recapture_Charge_Created("Recapture Charge Created"),
	Removed_From_Group("Removed From Group"),
	Renewal_Expiration_Letter_Sent("Renewal Expiration Letter Sent"),
	Role("Role"),
	SR22_Fee_Added_or_Removed("SR22 Fee Added or Removed"),
	Subrogation("Subrogation"),
	Suspense_Payment_Applied("Suspense Payment Applied"),
	Trouble_Ticket_Closed("Trouble Ticket Closed"),
	Trouble_Ticket_Opened("Trouble Ticket Opened"),
	troubleticket_hold_changed("troubleticket hold changed"),
	Unapplied_Funds("Unapplied Funds"),
	User_Created("User Created"),
	User_Deactivated("User Deactivated"),
	User_Retired("User Retired"),
	User_Role_Removed("User Role Removed"),
	UserID_Reassigned("UserID Reassigned"),
	Write_Off("Write Off"),
	Write_off("Write-off");
	String value;
	
	private HistoryFilterByType(String value){
		this.value = value;
	}
	
	public String getValue(){
		return this.value;
	}
}
