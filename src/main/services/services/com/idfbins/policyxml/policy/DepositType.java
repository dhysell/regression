//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.04.09 at 10:33:19 AM MDT 
//


package services.services.com.idfbins.policyxml.policy;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DepositType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DepositType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="ACH-EFT"/&gt;
 *     &lt;enumeration value="Cash"/&gt;
 *     &lt;enumeration value="Credit-Debit"/&gt;
 *     &lt;enumeration value="Intercompany Transfer"/&gt;
 *     &lt;enumeration value="Title Company"/&gt;
 *     &lt;enumeration value="Website"/&gt;
 *     &lt;enumeration value="Virtual Merchant"/&gt;
 *     &lt;enumeration value="Check"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "DepositType")
@XmlEnum
public enum DepositType {

    @XmlEnumValue("ACH-EFT")
    ACH_EFT("ACH-EFT"),
    @XmlEnumValue("Cash")
    CASH("Cash"),
    @XmlEnumValue("Credit-Debit")
    CREDIT_DEBIT("Credit-Debit"),
    @XmlEnumValue("Intercompany Transfer")
    INTERCOMPANY_TRANSFER("Intercompany Transfer"),
    @XmlEnumValue("Title Company")
    TITLE_COMPANY("Title Company"),
    @XmlEnumValue("Website")
    WEBSITE("Website"),
    @XmlEnumValue("Virtual Merchant")
    VIRTUAL_MERCHANT("Virtual Merchant"),
    @XmlEnumValue("Check")
    CHECK("Check");
    private final String value;

    DepositType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DepositType fromValue(String v) {
        for (DepositType c: DepositType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
