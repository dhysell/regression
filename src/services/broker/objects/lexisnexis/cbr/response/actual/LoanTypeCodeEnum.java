//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.16 at 01:50:47 PM MST 
//


package services.broker.objects.lexisnexis.cbr.response.actual;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for loanTypeCode.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="loanTypeCode">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Federal Housing Authority"/>
 *     &lt;enumeration value="Undetermined"/>
 *     &lt;enumeration value="Stand-Alone First"/>
 *     &lt;enumeration value="Stand-Alone Second"/>
 *     &lt;enumeration value="Assumption"/>
 *     &lt;enumeration value="Construction"/>
 *     &lt;enumeration value="Cash"/>
 *     &lt;enumeration value="Second Mortgage Made To Cover Down Payment"/>
 *     &lt;enumeration value="Credit Line"/>
 *     &lt;enumeration value="Fannie Mae/Freddie Mac"/>
 *     &lt;enumeration value="Balloon"/>
 *     &lt;enumeration value="Farmers Home Administration"/>
 *     &lt;enumeration value="Land Contract"/>
 *     &lt;enumeration value="Hula Mae (Hawaii)"/>
 *     &lt;enumeration value="New Conventional"/>
 *     &lt;enumeration value="Undefined/Multiple Amounts"/>
 *     &lt;enumeration value="Refinance"/>
 *     &lt;enumeration value="Seller Take-Back"/>
 *     &lt;enumeration value="Unknown"/>
 *     &lt;enumeration value="VA"/>
 *     &lt;enumeration value="Trade"/>
 *     &lt;enumeration value="State Veteran"/>
 *     &lt;enumeration value="Purchase Money Mortgage"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "loanTypeCode")
@XmlEnum
public enum LoanTypeCodeEnum {

    @XmlEnumValue("Federal Housing Authority")
    FEDERAL_HOUSING_AUTHORITY("Federal Housing Authority"),
    @XmlEnumValue("Undetermined")
    UNDETERMINED("Undetermined"),
    @XmlEnumValue("Stand-Alone First")
    STAND_ALONE_FIRST("Stand-Alone First"),
    @XmlEnumValue("Stand-Alone Second")
    STAND_ALONE_SECOND("Stand-Alone Second"),
    @XmlEnumValue("Assumption")
    ASSUMPTION("Assumption"),
    @XmlEnumValue("Construction")
    CONSTRUCTION("Construction"),
    @XmlEnumValue("Cash")
    CASH("Cash"),
    @XmlEnumValue("Second Mortgage Made To Cover Down Payment")
    SECOND_MORTGAGE_MADE_TO_COVER_DOWN_PAYMENT("Second Mortgage Made To Cover Down Payment"),
    @XmlEnumValue("Credit Line")
    CREDIT_LINE("Credit Line"),
    @XmlEnumValue("Fannie Mae/Freddie Mac")
    FANNIE_MAE_FREDDIE_MAC("Fannie Mae/Freddie Mac"),
    @XmlEnumValue("Balloon")
    BALLOON("Balloon"),
    @XmlEnumValue("Farmers Home Administration")
    FARMERS_HOME_ADMINISTRATION("Farmers Home Administration"),
    @XmlEnumValue("Land Contract")
    LAND_CONTRACT("Land Contract"),
    @XmlEnumValue("Hula Mae (Hawaii)")
    HULA_MAE_HAWAII("Hula Mae (Hawaii)"),
    @XmlEnumValue("New Conventional")
    NEW_CONVENTIONAL("New Conventional"),
    @XmlEnumValue("Undefined/Multiple Amounts")
    UNDEFINED_MULTIPLE_AMOUNTS("Undefined/Multiple Amounts"),
    @XmlEnumValue("Refinance")
    REFINANCE("Refinance"),
    @XmlEnumValue("Seller Take-Back")
    SELLER_TAKE_BACK("Seller Take-Back"),
    @XmlEnumValue("Unknown")
    UNKNOWN("Unknown"),
    VA("VA"),
    @XmlEnumValue("Trade")
    TRADE("Trade"),
    @XmlEnumValue("State Veteran")
    STATE_VETERAN("State Veteran"),
    @XmlEnumValue("Purchase Money Mortgage")
    PURCHASE_MONEY_MORTGAGE("Purchase Money Mortgage");
    private final String value;

    LoanTypeCodeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LoanTypeCodeEnum fromValue(String v) {
        for (LoanTypeCodeEnum c: LoanTypeCodeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
