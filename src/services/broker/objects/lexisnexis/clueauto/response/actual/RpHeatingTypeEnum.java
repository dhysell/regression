//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.16 at 04:49:21 PM MST 
//


package services.broker.objects.lexisnexis.clueauto.response.actual;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for null.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType>
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Baseboard"/>
 *     &lt;enumeration value="Yes"/>
 *     &lt;enumeration value="Central"/>
 *     &lt;enumeration value="Coal"/>
 *     &lt;enumeration value="Electric"/>
 *     &lt;enumeration value="Gas"/>
 *     &lt;enumeration value="Oil"/>
 *     &lt;enumeration value="Floor/Wall"/>
 *     &lt;enumeration value="Forced Air"/>
 *     &lt;enumeration value="Wood Burning"/>
 *     &lt;enumeration value="Gravity"/>
 *     &lt;enumeration value="Heat Pump"/>
 *     &lt;enumeration value="Solar"/>
 *     &lt;enumeration value="Hot Water"/>
 *     &lt;enumeration value="None"/>
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="Partial"/>
 *     &lt;enumeration value="Propane"/>
 *     &lt;enumeration value="Radiant"/>
 *     &lt;enumeration value="Space/Suspended"/>
 *     &lt;enumeration value="Steam"/>
 *     &lt;enumeration value="Vent"/>
 *     &lt;enumeration value="Zone"/>
 *     &lt;enumeration value="Unknown"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "")
@XmlEnum
public enum RpHeatingTypeEnum {

    @XmlEnumValue("Baseboard")
    BASEBOARD("Baseboard"),
    @XmlEnumValue("Yes")
    YES("Yes"),
    @XmlEnumValue("Central")
    CENTRAL("Central"),
    @XmlEnumValue("Coal")
    COAL("Coal"),
    @XmlEnumValue("Electric")
    ELECTRIC("Electric"),
    @XmlEnumValue("Gas")
    GAS("Gas"),
    @XmlEnumValue("Oil")
    OIL("Oil"),
    @XmlEnumValue("Floor/Wall")
    FLOOR_WALL("Floor/Wall"),
    @XmlEnumValue("Forced Air")
    FORCED_AIR("Forced Air"),
    @XmlEnumValue("Wood Burning")
    WOOD_BURNING("Wood Burning"),
    @XmlEnumValue("Gravity")
    GRAVITY("Gravity"),
    @XmlEnumValue("Heat Pump")
    HEAT_PUMP("Heat Pump"),
    @XmlEnumValue("Solar")
    SOLAR("Solar"),
    @XmlEnumValue("Hot Water")
    HOT_WATER("Hot Water"),
    @XmlEnumValue("None")
    NONE("None"),
    @XmlEnumValue("Other")
    OTHER("Other"),
    @XmlEnumValue("Partial")
    PARTIAL("Partial"),
    @XmlEnumValue("Propane")
    PROPANE("Propane"),
    @XmlEnumValue("Radiant")
    RADIANT("Radiant"),
    @XmlEnumValue("Space/Suspended")
    SPACE_SUSPENDED("Space/Suspended"),
    @XmlEnumValue("Steam")
    STEAM("Steam"),
    @XmlEnumValue("Vent")
    VENT("Vent"),
    @XmlEnumValue("Zone")
    ZONE("Zone"),
    @XmlEnumValue("Unknown")
    UNKNOWN("Unknown");
    private final String value;

    RpHeatingTypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static RpHeatingTypeEnum fromValue(String v) {
        for (RpHeatingTypeEnum c: RpHeatingTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
