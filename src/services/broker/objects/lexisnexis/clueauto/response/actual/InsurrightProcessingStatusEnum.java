//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.16 at 04:49:21 PM MST 
//


package services.broker.objects.lexisnexis.clueauto.response.actual;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for insurrightProcessingStatusType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="insurrightProcessingStatusType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="processing complete, with results"/>
 *     &lt;enumeration value="processing complete, no results"/>
 *     &lt;enumeration value="not processed, invalid LexisNexis Account Number"/>
 *     &lt;enumeration value="not processed, insufficient search data"/>
 *     &lt;enumeration value="product not requested"/>
 *     &lt;enumeration value="not processed, product unavailable"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "insurrightProcessingStatusType")
@XmlEnum
public enum InsurrightProcessingStatusEnum {

    @XmlEnumValue("processing complete, with results")
    PROCESSING_COMPLETE_WITH_RESULTS("processing complete, with results"),
    @XmlEnumValue("processing complete, no results")
    PROCESSING_COMPLETE_NO_RESULTS("processing complete, no results"),
    @XmlEnumValue("not processed, invalid LexisNexis Account Number")
    NOT_PROCESSED_INVALID_LEXIS_NEXIS_ACCOUNT_NUMBER("not processed, invalid LexisNexis Account Number"),
    @XmlEnumValue("not processed, insufficient search data")
    NOT_PROCESSED_INSUFFICIENT_SEARCH_DATA("not processed, insufficient search data"),
    @XmlEnumValue("product not requested")
    PRODUCT_NOT_REQUESTED("product not requested"),
    @XmlEnumValue("not processed, product unavailable")
    NOT_PROCESSED_PRODUCT_UNAVAILABLE("not processed, product unavailable");
    private final String value;

    InsurrightProcessingStatusEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static InsurrightProcessingStatusEnum fromValue(String v) {
        for (InsurrightProcessingStatusEnum c: InsurrightProcessingStatusEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
