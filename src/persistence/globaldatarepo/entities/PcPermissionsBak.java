package persistence.globaldatarepo.entities;
// default package
// Generated Jun 12, 2017 11:57:17 AM by Hibernate Tools 5.2.0.Beta1

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import persistence.config.PersistenceFactory;
import persistence.enums.HibernateConfigs;

import javax.persistence.*;

/**
 * PcPermissionsBak generated by hbm2java
 */
@Entity
@Table(name = "PC_PermissionsBAK", schema = "dbo", catalog = "QAWIZPROGlobalDataRepository")
public class PcPermissionsBak{

	private String permission;
	private String code;
	private String description;

	public PcPermissionsBak() {
	}

	public PcPermissionsBak(String permission, String code) {
		this.permission = permission;
		this.code = code;
	}

	public PcPermissionsBak(String permission, String code, String description) {
		this.permission = permission;
		this.code = code;
		this.description = description;
	}

	@Id

	@Column(name = "Permission", unique = true, nullable = false, length = 200)
	public String getPermission() {
		return this.permission;
	}

	public void setPermission(String permission) {
		this.permission = permission;
	}

	@Column(name = "Code", nullable = false, length = 100)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "Description", length = 500)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}
	
	
	@Transient
	public static void createNewPCPermission(String permission, String code, String description) throws Exception {
		SessionFactory sessionFactory = null;
		Session session = null;
        PersistenceFactory pf = new PersistenceFactory();
		try {
            sessionFactory = pf.getSessionFactory(HibernateConfigs.GlobalDataRepository);

			session = sessionFactory.openSession();
			session.beginTransaction();

			PcPermissionsBak pcPermission = new PcPermissionsBak(permission, code, description);

			session.save(pcPermission);

			session.getTransaction().commit();
		} catch (Exception e) {			
			e.printStackTrace();
		} finally {
			session.clear();
            pf.close();
		}
	}
	

}
