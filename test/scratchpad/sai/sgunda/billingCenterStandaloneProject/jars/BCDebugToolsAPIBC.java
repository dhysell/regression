
package scratchpad.sai.sgunda.billingCenterStandaloneProject.jars;

import gwclockservice.bcdebugtoolsapi.BCDebugToolsAPIPortType;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "BCDebugToolsAPI", targetNamespace = "http://guidewire.com/bc/ws/gw/webservice/policycenter/bc801/BCDebugToolsAPI", wsdlLocation = "http://bc8dev/bc/ws/gw/webservice/policycenter/bc801/BCDebugToolsAPI?WSDL")
public class BCDebugToolsAPIBC
    extends Service
{

    private final static URL BCDEBUGTOOLSAPI_WSDL_LOCATION;
    private final static WebServiceException BCDEBUGTOOLSAPI_EXCEPTION;
    private final static QName BCDEBUGTOOLSAPI_QNAME = new QName("http://guidewire.com/bc/ws/gw/webservice/policycenter/bc801/BCDebugToolsAPI", "BCDebugToolsAPI");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://bc8dev/bc/ws/gw/webservice/policycenter/bc801/BCDebugToolsAPI?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        BCDEBUGTOOLSAPI_WSDL_LOCATION = url;
        BCDEBUGTOOLSAPI_EXCEPTION = e;
    }

    public BCDebugToolsAPIBC() {
        super(__getWsdlLocation(), BCDEBUGTOOLSAPI_QNAME);
    }

    public BCDebugToolsAPIBC(WebServiceFeature... features) {
        super(__getWsdlLocation(), BCDEBUGTOOLSAPI_QNAME, features);
    }

    public BCDebugToolsAPIBC(URL wsdlLocation) {
        super(wsdlLocation, BCDEBUGTOOLSAPI_QNAME);
    }

    public BCDebugToolsAPIBC(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, BCDEBUGTOOLSAPI_QNAME, features);
    }

    public BCDebugToolsAPIBC(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BCDebugToolsAPIBC(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns BCDebugToolsAPIPortType
     */
    @WebEndpoint(name = "BCDebugToolsAPISoap11Port")
    public BCDebugToolsAPIPortType getBCDebugToolsAPISoap11Port() {
        return super.getPort(new QName("http://guidewire.com/bc/ws/gw/webservice/policycenter/bc801/BCDebugToolsAPI", "BCDebugToolsAPISoap11Port"), BCDebugToolsAPIPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BCDebugToolsAPIPortType
     */
    @WebEndpoint(name = "BCDebugToolsAPISoap11Port")
    public BCDebugToolsAPIPortType getBCDebugToolsAPISoap11Port(WebServiceFeature... features) {
        return super.getPort(new QName("http://guidewire.com/bc/ws/gw/webservice/policycenter/bc801/BCDebugToolsAPI", "BCDebugToolsAPISoap11Port"), BCDebugToolsAPIPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (BCDEBUGTOOLSAPI_EXCEPTION!= null) {
            throw BCDEBUGTOOLSAPI_EXCEPTION;
        }
        return BCDEBUGTOOLSAPI_WSDL_LOCATION;
    }

}
